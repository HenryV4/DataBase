-- MySQL Script generated by MySQL Workbench
-- Sun Sep 29 15:16:19 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lab1
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lab1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lab1` DEFAULT CHARACTER SET utf8 ;
USE `lab1` ;

-- -----------------------------------------------------
-- Table `lab1`.`location`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`location` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `city` VARCHAR(45) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`Chain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`Chain` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`Hotel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`Hotel` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `room_num` INT NULL,
  `location_id` INT NOT NULL,
  `stars` INT NOT NULL,
  `Chain_id` INT NULL,
  PRIMARY KEY (`id`, `location_id`),
  INDEX `fk_Hotel_location1_idx` (`location_id` ASC) VISIBLE,
  INDEX `fk_Hotel_Chain1_idx` (`Chain_id` ASC) VISIBLE,
  INDEX `idx_hotel_stars` (`stars` ASC) VISIBLE,
  CONSTRAINT `fk_Hotel_location1`
    FOREIGN KEY (`location_id`)
    REFERENCES `lab1`.`location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hotel_Chain1`
    FOREIGN KEY (`Chain_id`)
    REFERENCES `lab1`.`Chain` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`room` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `room_type` VARCHAR(45) NOT NULL,
  `price_per_night` INT NOT NULL,
  `available` TINYINT NOT NULL,
  `Hotel_id` INT NOT NULL,
  `Hotel_location_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Hotel_id`, `Hotel_location_id`),
  INDEX `fk_room_Hotel1_idx` (`Hotel_id` ASC, `Hotel_location_id` ASC) VISIBLE,
  CONSTRAINT `fk_room_Hotel1`
    FOREIGN KEY (`Hotel_id` , `Hotel_location_id`)
    REFERENCES `lab1`.`Hotel` (`id` , `location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`discount_cards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`discount_cards` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `discound` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`client` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `full_name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone_num` VARCHAR(45) NOT NULL,
  `discount_cards_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_client_discount_cards1_idx` (`discount_cards_id` ASC) INVISIBLE,
  INDEX `idx_client_email` (`email` ASC) INVISIBLE,
  CONSTRAINT `fk_client_discount_cards1`
    FOREIGN KEY (`discount_cards_id`)
    REFERENCES `lab1`.`discount_cards` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`payment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `card_number` VARCHAR(20) NULL,
  `payment_amount` INT NOT NULL,
  `payment_date` DATE NOT NULL,
  `status` TINYINT NOT NULL,
  `client_id` INT NOT NULL,
  PRIMARY KEY (`id`, `client_id`),
  INDEX `fk_payment_client1_idx` (`client_id` ASC) VISIBLE,
  CONSTRAINT `fk_payment_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `lab1`.`client` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`booking` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `check_in_date` DATE NOT NULL,
  `chek_out_date` DATE NOT NULL,
  `total_price` INT NOT NULL,
  `room_id` INT NOT NULL,
  `client_id` INT NOT NULL,
  `payment_id` INT NOT NULL,
  `payment_client_id` INT NOT NULL,
  PRIMARY KEY (`id`, `room_id`, `client_id`, `payment_id`, `payment_client_id`),
  INDEX `fk_booking_room1_idx` (`room_id` ASC) VISIBLE,
  INDEX `fk_booking_client1_idx` (`client_id` ASC) VISIBLE,
  INDEX `fk_booking_payment1_idx` (`payment_id` ASC, `payment_client_id` ASC) VISIBLE,
  INDEX `idx_booking_check_in_date` (`check_in_date` ASC) VISIBLE,
  CONSTRAINT `fk_booking_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `lab1`.`room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_booking_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `lab1`.`client` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_booking_payment1`
    FOREIGN KEY (`payment_id` , `payment_client_id`)
    REFERENCES `lab1`.`payment` (`id` , `client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`review` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `rating` INT NOT NULL,
  `comment` TEXT NULL,
  `client_id` INT NOT NULL,
  `Hotel_id` INT NOT NULL,
  PRIMARY KEY (`id`, `client_id`, `Hotel_id`),
  INDEX `fk_review_client1_idx` (`client_id` ASC) VISIBLE,
  INDEX `fk_review_Hotel1_idx` (`Hotel_id` ASC) VISIBLE,
  CONSTRAINT `fk_review_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `lab1`.`client` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_Hotel1`
    FOREIGN KEY (`Hotel_id`)
    REFERENCES `lab1`.`Hotel` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`amenities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`amenities` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lab1`.`Hotel_has_amenities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lab1`.`Hotel_has_amenities` (
  `Hotel_id` INT NOT NULL,
  `Hotel_location_id` INT NOT NULL,
  `amenities_id` INT NOT NULL,
  PRIMARY KEY (`Hotel_id`, `Hotel_location_id`, `amenities_id`),
  INDEX `fk_Hotel_has_amenities_amenities1_idx` (`amenities_id` ASC) VISIBLE,
  INDEX `fk_Hotel_has_amenities_Hotel1_idx` (`Hotel_id` ASC, `Hotel_location_id` ASC) VISIBLE,
  CONSTRAINT `fk_Hotel_has_amenities_Hotel1`
    FOREIGN KEY (`Hotel_id` , `Hotel_location_id`)
    REFERENCES `lab1`.`Hotel` (`id` , `location_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Hotel_has_amenities_amenities1`
    FOREIGN KEY (`amenities_id`)
    REFERENCES `lab1`.`amenities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `lab1`.`location`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`location` (`id`, `city`, `country`) VALUES (1, 'Lviv', 'Ukraine');
INSERT INTO `lab1`.`location` (`id`, `city`, `country`) VALUES (2, 'Kyiv', 'Ukraine');
INSERT INTO `lab1`.`location` (`id`, `city`, `country`) VALUES (3, 'Warsaw', 'Poland');
INSERT INTO `lab1`.`location` (`id`, `city`, `country`) VALUES (4, 'Berlin', 'German');
INSERT INTO `lab1`.`location` (`id`, `city`, `country`) VALUES (5, 'Vienna', 'Austria');

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`Chain`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`Chain` (`id`, `name`) VALUES (1, 'Ibis');
INSERT INTO `lab1`.`Chain` (`id`, `name`) VALUES (2, 'Mercure');
INSERT INTO `lab1`.`Chain` (`id`, `name`) VALUES (3, 'Novotel');

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`Hotel`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`Hotel` (`id`, `name`, `address`, `room_num`, `location_id`, `stars`, `Chain_id`) VALUES (1, 'ibis Styles Lviv Center', 'Shukhevycha Street, 3', 77, 1, 3, 1);
INSERT INTO `lab1`.`Hotel` (`id`, `name`, `address`, `room_num`, `location_id`, `stars`, `Chain_id`) VALUES (2, 'Mercure Kyiv Congress', 'Vadima Hetmana Street, 6', 160, 2, 4, 2);
INSERT INTO `lab1`.`Hotel` (`id`, `name`, `address`, `room_num`, `location_id`, `stars`, `Chain_id`) VALUES (3, 'Novotel Warszawa Airport', 'UL. 1 Sierpnia 1', 281, 3, 4, 3);
INSERT INTO `lab1`.`Hotel` (`id`, `name`, `address`, `room_num`, `location_id`, `stars`, `Chain_id`) VALUES (4, 'ibis Wels', 'Maria Theresia Strasse 44', 116, 5, 3, 1);
INSERT INTO `lab1`.`Hotel` (`id`, `name`, `address`, `room_num`, `location_id`, `stars`, `Chain_id`) VALUES (5, 'Hotel Mercure Vienne City', 'Bayerhamerstrasse 14 a', 121, 4, 4, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`room`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`room` (`id`, `room_type`, `price_per_night`, `available`, `Hotel_id`, `Hotel_location_id`) VALUES (1, 'Single', 50, 1, 1, 1);
INSERT INTO `lab1`.`room` (`id`, `room_type`, `price_per_night`, `available`, `Hotel_id`, `Hotel_location_id`) VALUES (2, 'Double', 80, 1, 1, 1);
INSERT INTO `lab1`.`room` (`id`, `room_type`, `price_per_night`, `available`, `Hotel_id`, `Hotel_location_id`) VALUES (3, 'Suite', 150, 1, 2, 2);
INSERT INTO `lab1`.`room` (`id`, `room_type`, `price_per_night`, `available`, `Hotel_id`, `Hotel_location_id`) VALUES (4, 'Deluxe', 200, 1, 3, 3);
INSERT INTO `lab1`.`room` (`id`, `room_type`, `price_per_night`, `available`, `Hotel_id`, `Hotel_location_id`) VALUES (5, 'Single', 55, 1, 4, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`discount_cards`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`discount_cards` (`id`, `name`, `discound`) VALUES (1, 'silver', '5%');
INSERT INTO `lab1`.`discount_cards` (`id`, `name`, `discound`) VALUES (2, 'gold', '10%');
INSERT INTO `lab1`.`discount_cards` (`id`, `name`, `discound`) VALUES (3, 'platinum', '15%');

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`client`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`client` (`id`, `full_name`, `email`, `phone_num`, `discount_cards_id`) VALUES (1, 'John Doe', 'johndoe@gmail.com', '+380123456789', 1);
INSERT INTO `lab1`.`client` (`id`, `full_name`, `email`, `phone_num`, `discount_cards_id`) VALUES (2, 'Jane Smith', 'janesmith@gmail.com', '+380987654321', 2);
INSERT INTO `lab1`.`client` (`id`, `full_name`, `email`, `phone_num`, `discount_cards_id`) VALUES (3, 'Mark Brown', 'markbrown@gmail.com', '+48123456789', NULL);
INSERT INTO `lab1`.`client` (`id`, `full_name`, `email`, `phone_num`, `discount_cards_id`) VALUES (4, 'Anna Johnson', 'annajonson@gmail.com', '+49301234567', 3);
INSERT INTO `lab1`.`client` (`id`, `full_name`, `email`, `phone_num`, `discount_cards_id`) VALUES (5, 'Tom Lee', 'tomlee@gmail.com', '+43123456789', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`payment`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`payment` (`id`, `card_number`, `payment_amount`, `payment_date`, `status`, `client_id`) VALUES (1, '1234567890123456', 250, '2024-09-10', 1, 1);
INSERT INTO `lab1`.`payment` (`id`, `card_number`, `payment_amount`, `payment_date`, `status`, `client_id`) VALUES (2, '2345678901234567', 400, '2024-09-11', 1, 2);
INSERT INTO `lab1`.`payment` (`id`, `card_number`, `payment_amount`, `payment_date`, `status`, `client_id`) VALUES (3, '3456789012345678', 600, '2024-09-12', 0, 3);
INSERT INTO `lab1`.`payment` (`id`, `card_number`, `payment_amount`, `payment_date`, `status`, `client_id`) VALUES (4, '4567890123456789', 1000, '2024-09-13', 1, 4);
INSERT INTO `lab1`.`payment` (`id`, `card_number`, `payment_amount`, `payment_date`, `status`, `client_id`) VALUES (5, '5678901234567890', 275, '2024-09-14', 1, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`booking`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`booking` (`id`, `check_in_date`, `chek_out_date`, `total_price`, `room_id`, `client_id`, `payment_id`, `payment_client_id`) VALUES (1, '2024-09-10', '2024-09-15', 250, 1, 1, 1, 1);
INSERT INTO `lab1`.`booking` (`id`, `check_in_date`, `chek_out_date`, `total_price`, `room_id`, `client_id`, `payment_id`, `payment_client_id`) VALUES (2, '2024-09-11', '2024-09-16', 400, 2, 2, 2, 2);
INSERT INTO `lab1`.`booking` (`id`, `check_in_date`, `chek_out_date`, `total_price`, `room_id`, `client_id`, `payment_id`, `payment_client_id`) VALUES (3, '2024-09-12', '2024-09-17', 600, 3, 3, 3, 3);
INSERT INTO `lab1`.`booking` (`id`, `check_in_date`, `chek_out_date`, `total_price`, `room_id`, `client_id`, `payment_id`, `payment_client_id`) VALUES (4, '2024-09-13', '2024-09-18', 1000, 4, 4, 4, 4);
INSERT INTO `lab1`.`booking` (`id`, `check_in_date`, `chek_out_date`, `total_price`, `room_id`, `client_id`, `payment_id`, `payment_client_id`) VALUES (5, '2024-09-13', '2024-09-19', 275, 5, 5, 5, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`review`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`review` (`id`, `rating`, `comment`, `client_id`, `Hotel_id`) VALUES (1, 5, 'Great stay!', 1, 1);
INSERT INTO `lab1`.`review` (`id`, `rating`, `comment`, `client_id`, `Hotel_id`) VALUES (2, 4, 'Nice place, but could improve.', 2, 2);
INSERT INTO `lab1`.`review` (`id`, `rating`, `comment`, `client_id`, `Hotel_id`) VALUES (3, 3, 'Average experience.', 3, 3);
INSERT INTO `lab1`.`review` (`id`, `rating`, `comment`, `client_id`, `Hotel_id`) VALUES (4, 5, NULL, 4, 4);
INSERT INTO `lab1`.`review` (`id`, `rating`, `comment`, `client_id`, `Hotel_id`) VALUES (5, 4, 'Amazing service!', 5, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`amenities`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (1, 'Wi-Fi');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (2, 'Swimming Pool');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (3, 'Gym');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (4, 'Spa');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (5, 'Parking');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (6, 'Restaurant');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (7, 'Bar');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (8, 'Room Service');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (9, 'Conference Room');
INSERT INTO `lab1`.`amenities` (`id`, `name`) VALUES (10, 'Laundry Service');

COMMIT;


-- -----------------------------------------------------
-- Data for table `lab1`.`Hotel_has_amenities`
-- -----------------------------------------------------
START TRANSACTION;
USE `lab1`;
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (1, 1, 1);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (1, 1, 2);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (1, 1, 3);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (2, 2, 1);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (2, 2, 4);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (3, 3, 1);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (3, 3, 5);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (4, 5, 6);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (5, 4, 1);
INSERT INTO `lab1`.`Hotel_has_amenities` (`Hotel_id`, `Hotel_location_id`, `amenities_id`) VALUES (5, 4, 3);

COMMIT;

